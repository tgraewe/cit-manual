{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","createElement","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAGe,SAASA,IACtB,OACEC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,+DAEJD,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SAAG,2XAMHD,IAAAC,cAAA,SAAG,4XAQLD,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,+BACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,0FACJD,IAAAC,cAAA,UAAI,yEACJD,IAAAC,cAAA,UAAI,kFAEND,IAAAC,cAAA,SAAG,8GAGLD,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAAA,SAAG,qGACHD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,mCACJD,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAI,+CAEND,IAAAC,cAAA,SAAG,gGAGLD,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SAAG,2EACHD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,UAAI,wCAEND,IAAAC,cAAA,KAAGC,UAAU,OAAM,6GAGrBF,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,gCACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,YAAiB,wFAC5BD,IAAAC,cAAA,SAAG,+IAIHD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,yCACJD,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAAA,UAAI,oCAEND,IAAAC,cAAA,KAAGC,UAAU,OAAM,4GAGrBF,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,gCACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,YAAiB,6DAC5BD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,yFACJD,IAAAC,cAAA,UAAI,8CACJD,IAAAC,cAAA,UAAI,kDAEND,IAAAC,cAAA,KAAGC,UAAU,OAAM,+GAGrBF,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,YAAiB,iEAC5BD,IAAAC,cAAA,SAAG,2JAIHD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,iGACJD,IAAAC,cAAA,UAAI,iFACJD,IAAAC,cAAA,UAAI,2EACJD,IAAAC,cAAA,UAAI,0FACJD,IAAAC,cAAA,UAAI,uEAEND,IAAAC,cAAA,KAAGC,UAAU,OAAM,oGC7FZC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpB,IAAAC,cAACD,IAAMqB,WAAU,KACfrB,IAAAC,cAACF,EAAG,QAORI","file":"static/js/main.5301ca0c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <h1>User Manual: How to Write a CIT Lab Report for CNIT Courses</h1>\n\n      <section>\n        <h2>Introduction</h2>\n        <p>\n          Technical lab reports are a fundamental requirement in Purdue’s Computer and Information Technology (CIT)\n          networking courses, such as CNIT 24000 and CNIT 24200. These reports serve two key purposes: they\n          contribute significantly to your course grade, and they help you develop professional documentation skills\n          essential for careers in IT, cybersecurity, and networking.\n        </p>\n        <p>\n          This manual provides a structured approach to writing CIT lab reports, ensuring clarity, professionalism,\n          and adherence to academic standards. Whether you are a first-time student unfamiliar with technical writing\n          or a returning student looking to improve your reports, this guide will help you understand each section’s\n          expectations and how to fulfill them effectively.\n        </p>\n      </section>\n\n      <section>\n        <h2>Who Should Use This Manual?</h2>\n        <ul>\n          <li>First-time CNIT students who need clear instructions on writing technical lab reports.</li>\n          <li>Returning students seeking to refine their reports for better grades.</li>\n          <li>Peer reviewers or TAs who need a structured checklist for evaluating reports.</li>\n        </ul>\n        <p>No prior technical writing experience is required—this manual breaks down each section step by step.</p>\n      </section>\n\n      <section>\n        <h2>Report Structure Overview</h2>\n        <p>A well-organized CIT lab report must include the following sections, each starting on a new page:</p>\n        <ol>\n          <li>Cover Page</li>\n          <li>Table of Contents</li>\n          <li>Executive Summary</li>\n          <li>Business Scenario</li>\n          <li>Procedures</li>\n          <li>Results</li>\n          <li>Conclusions and Recommendations</li>\n          <li>Bibliography</li>\n          <li>Appendices</li>\n          <li>Troubleshooting (Optional but recommended)</li>\n        </ol>\n        <p>Each section has a specific purpose, ensuring the report is comprehensive and professional.</p>\n      </section>\n\n      <section>\n        <h2>Section 1: Cover Page</h2>\n        <p>The cover page is the first impression of your report and must include:</p>\n        <ul>\n          <li>Title of the lab</li>\n          <li>CNIT course number and section</li>\n          <li>Names of all group members</li>\n          <li>Date submitted</li>\n          <li>Instructor’s or TA’s name</li>\n        </ul>\n        <p className=\"tip\">✅ Tip: Use a clean, professional layout. Avoid excessive graphics or colors—simplicity is key.</p>\n      </section>\n\n      <section>\n        <h2>Section 2: Executive Summary</h2>\n        <p><strong>Purpose:</strong> Provide a concise, non-technical summary of the lab’s objectives and outcomes.</p>\n        <p>\n          Although this section appears early in the report, it should be written last since it summarizes the entire lab.\n          It should briefly explain:\n        </p>\n        <ul>\n          <li>What the lab required (the objective)</li>\n          <li>What you did (the process)</li>\n          <li>What was achieved (the results)</li>\n        </ul>\n        <p className=\"tip\">✅ Tip: Write for a non-technical audience—avoid jargon. Keep it to one paragraph if possible.</p>\n      </section>\n\n      <section>\n        <h2>Section 3: Business Scenario</h2>\n        <p><strong>Purpose:</strong> Establish a real-world or fictional context for the lab.</p>\n        <ul>\n          <li>A hypothetical company or department that would benefit from the lab’s outcomes.</li>\n          <li>A brief background explaining their needs.</li>\n          <li>Why this lab is relevant to their operations.</li>\n        </ul>\n        <p className=\"tip\">✅ Tip: Think of this as justifying the lab’s importance in a business or organizational setting.</p>\n      </section>\n\n      <section>\n        <h2>Section 4: Procedures</h2>\n        <p><strong>Purpose:</strong> Provide a step-by-step account of how the lab was completed.</p>\n        <p>\n          This section should be detailed enough that another student or professional could replicate your work. Use\n          complete sentences and avoid vague language.\n        </p>\n        <ul>\n          <li>Document each major step taken, including network setups, configurations, or test cases used.</li>\n          <li>Write in third-person past tense (e.g., \"The team configured the router...\").</li>\n          <li>Include screenshots or code snippets when necessary to support clarity.</li>\n          <li>Reference any tools, platforms, or guides used (e.g., Cisco Packet Tracer, Wireshark).</li>\n          <li>Note problems encountered, solutions applied, and lessons learned.</li>\n        </ul>\n        <p className=\"tip\">✅ Tip: Focus on replicability. The reader should be able to follow and repeat your steps.</p>\n      </section>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}